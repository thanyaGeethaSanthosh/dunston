{"version":3,"sources":["components/Header.js","components/Button.js","components/TextEditor.js","components/OutputConsole.js","components/Row.js","components/RegisterTable.js","components/StackView.js","components/Editor.js","App.js","serviceWorker.js","index.js"],"names":["StyledHeader","styled","div","Header","props","StyledButton","button","Button","value","onClick","disabled","StyledTextEditor","StyledTextArea","textarea","StyledButtons","TextEditor","onRun","onStepInto","onNext","useState","lineNo","setLineNo","code","setCode","stepInToDisable","setStepInToDisable","nextDisable","setnextDisable","onChange","event","target","onKeyUp","keyCode","newLine","previous","StyledOutput","OutputConsole","output","StyledRow","StyledCell","count","Row","row","Object","values","cells","map","index","length","key","StyledRegisterTable","StyledTitleBar","StyledRegisterTitle","RegisterTable","registerList","titles","tit","ind","rows","table","A","B","C","D","EQ","NE","GT","LT","CL","NL","StackStyle","StyledStackTitle","StackView","stack","StyledWindow","StyledEditor","LeftPanel","RightPanel","Editor","machine","setOutput","setTable","setStack","updateAll","getStack","currOutput","getPrn","join","getTable","a","load","execute","executeStepWise","nextStep","App","Machine","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ccfe8ecd.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledHeader = styled.div`\n  width: 100%;\n  height: 5vh;\n  font-weight: 100;\n  font-size: 4vh;\n  font-family: sans-serif;\n  text-align: center;\n  background-color: lightgray;\n`;\n\nconst Header = (props) => {\n  return <StyledHeader>Assembly Simulator</StyledHeader>;\n};\n\nexport default Header;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  margin-top: 0.7vh;\n  width: 28%;\n  height: 4vh;\n  background-color: lightgray;\n  color: #696969;\n`;\n\nconst Button = (props) => {\n  const { value, onClick, disabled } = props;\n  return (\n    <StyledButton disabled={disabled} onClick={onClick}>\n      {value}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Button from './Button';\n\nconst StyledTextEditor = styled.div`\n  height: 60%;\n`;\nconst StyledTextArea = styled.textarea`\n  width: 99%;\n  height: 89%;\n  font-family: sans-serif;\n  font-size: 2.3vh;\n  font-weight: 100;\n`;\nconst StyledButtons = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst TextEditor = (props) => {\n  const { onRun, onStepInto, onNext } = props;\n  const [lineNo, setLineNo] = useState(10);\n  const [code, setCode] = useState(`${lineNo} `);\n  const [stepInToDisable, setStepInToDisable] = useState(false);\n  const [nextDisable, setnextDisable] = useState(true);\n\n  const updateCode = (event) => {\n    setCode(event.target.value);\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.keyCode === 13) {\n      const newLine = lineNo + 10;\n      setLineNo(newLine);\n      setCode((previous) => `${previous}${newLine} `);\n    }\n  };\n\n  return (\n    <StyledTextEditor>\n      <StyledTextArea\n        onChange={updateCode}\n        onKeyUp={handleKeyDown}\n        value={code}\n      />\n      <StyledButtons>\n        <Button\n          disabled={stepInToDisable}\n          onClick={() => {\n            setStepInToDisable(true);\n            setnextDisable(false);\n            onStepInto(code);\n          }}\n          value=\"Step into\"\n        />\n        <Button onClick={() => onRun(code)} value=\"Run\" />\n        <Button disabled={nextDisable} onClick={onNext} value=\"Next\" />\n      </StyledButtons>\n    </StyledTextEditor>\n  );\n};\n\nexport default TextEditor;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledOutput = styled.div`\n  height: 40%;\n  width: 100%;\n  border: 1px solid gray;\n`;\nconst OutputConsole = (props) => {\n  return <StyledOutput>{props.output}</StyledOutput>;\n};\n\nexport default OutputConsole;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledRow = styled.div`\n  width: 100%;\n  padding: 1vh;\n  padding-left: 0;\n  height: 2.3vh;\n  display: flex;\n`;\n\nconst StyledCell = styled.div`\n  height: 2.3vh;\n  padding: 1vh;\n  border: 1px solid gray;\n  text-align: center;\n  font-size: 2vh;\n  ${(props) =>\n    `width:${100 / props.count}%;\n    `}\n`;\n\nconst Row = (props) => {\n  const row = Object.values(props.row);\n  const cells = row.map((value, index) => (\n    <StyledCell count={row.length} key={`${props.index}_${index}`}>\n      {value}\n    </StyledCell>\n  ));\n  return <StyledRow>{cells}</StyledRow>;\n};\n\nexport default Row;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Row from './Row';\n\nconst StyledRegisterTable = styled.div`\n  border: 1px solid gray;\n  width: 88%;\n  height: 100%;\n`;\n\nconst StyledTitleBar = styled.div`\n  display: flex;\n`;\n\nconst StyledRegisterTitle = styled.div`\n  border: 1px solid gray;\n  font-size: 3vh;\n  text-align: center;\n  background-color: #f5f5f5;\n  color: #444444;\n  ${(props) =>\n    `width:${100 / props.count}%;\n    `}\n`;\n\nconst RegisterTable = (props) => {\n  const registerList = [\n    ' CL',\n    ' NL',\n    'A',\n    ' B',\n    ' C',\n    ' D',\n    ' EQ',\n    ' NE',\n    ' GT',\n    ' LT',\n  ];\n  const titles = registerList.map((tit, ind) => (\n    <StyledRegisterTitle count={registerList.length} key={ind}>\n      {tit}\n    </StyledRegisterTitle>\n  ));\n  const rows = props.table.map(\n    ({ A, B, C, D, EQ, NE, GT, LT, CL, NL }, index) => (\n      <Row\n        row={{ CL, NL, A, B, C, D, EQ, NE, GT, LT }}\n        index={index}\n        key={index}\n      />\n    )\n  );\n  return (\n    <StyledRegisterTable>\n      <StyledTitleBar>{titles}</StyledTitleBar>\n      {rows}\n    </StyledRegisterTable>\n  );\n};\n\nexport default RegisterTable;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StackStyle = styled.div`\n  width: 12%;\n  border: 1px solid gray;\n  height: 100%;\n`;\nconst StyledStackTitle = styled.div`\n  font-size: 3vh;\n  text-align: center;\n  background-color: #f5f5f5;\n  color: #444444;\n  border-bottom: 1px solid gray;\n`;\n\nconst StackView = (props) => {\n  return (\n    <StackStyle>\n      <StyledStackTitle>Stack</StyledStackTitle>\n      {props.stack}\n    </StackStyle>\n  );\n};\n\nexport default StackView;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Header from './Header';\nimport TextEditor from './TextEditor';\nimport OutputConsole from './OutputConsole';\nimport RegisterTable from './RegisterTable';\nimport StackView from './StackView';\n\nconst StyledWindow = styled.div`\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  width: 100vw;\n  height: 100vh;\n`;\n\nconst StyledEditor = styled.div`\n  width: 100%;\n  height: 95vh;\n  display: flex;\n`;\n\nconst LeftPanel = styled.div`\n  width: 38%;\n  height: 100%;\n`;\n\nconst RightPanel = styled.div`\n  width: 62%;\n  height: 100%;\n  display: flex;\n`;\n\nconst Editor = ({ machine }) => {\n  const [output, setOutput] = useState();\n  const [table, setTable] = useState([]);\n  const [stack, setStack] = useState([]);\n\n  const updateAll = () => {\n    setStack(machine.getStack());\n    const currOutput = machine.getPrn().join('\\n');\n    setOutput(currOutput);\n    setTable(machine.getTable());\n  };\n\n  const onRun = async (code) => {\n    machine.load(code);\n    await machine.execute();\n    updateAll();\n  };\n\n  const onStepInto = async (code) => {\n    machine.load(code);\n    await machine.executeStepWise(() => {});\n    updateAll();\n  };\n\n  const onNext = async () => {\n    await machine.nextStep();\n    updateAll();\n  };\n\n  return (\n    <StyledWindow>\n      <Header />\n      <StyledEditor>\n        <LeftPanel>\n          <TextEditor onRun={onRun} onStepInto={onStepInto} onNext={onNext} />\n          <OutputConsole output={output} />\n        </LeftPanel>\n        <RightPanel>\n          <RegisterTable table={table} />\n          <StackView stack={stack} />\n        </RightPanel>\n      </StyledEditor>\n    </StyledWindow>\n  );\n};\n\nexport default Editor;\n","import React from 'react';\nimport Machine from '@craftybones/assembly_simulator';\nimport Editor from './components/Editor';\n\nconst App = () => {\n  return <Editor machine={new Machine()} />;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}